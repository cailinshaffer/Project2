sequelize model:create --name pets --attributes type:string,age:integer,breed:string


<form action="/pets/results" method="GET">
    <p>Pet Type: <%= pets.type%></p>
    
</form>


require('dotenv').config() 
const axios = require('axios')
const API_KEY = process.env.API_KEY

app.get('/', async (req,res) => {
    try {
        const baseUrl = 'https://api.petfinder.com/v2/oauth2/token'
        console.log(bsaeUrl)
        cosnt response = await axios.get(baseUrl)
        res.json(response.data)
    } catch (error) {
        // console log the specifics of the error, but keep them private
        console.log('ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥', error)
        // generic interal server error code, message to the client that something bad happened
        res.status(500).send('internal server error')
        
    }
})





const axios = require('axios')
const CLIENT_ID = process.env.CLIENT_ID
const SECRET_ID = process.env.SECRET_ID

async function fetchPets() {
    try {
        const body = {
            'grant_type': 'client_credentials',
            'client_id': CLIENT_ID,
            'client_secret': SECRET
        }

        // https://api.petfinder.com/v2/oauth2/token
        const tokenUrl = 'https://api.petfinder.com/v2/oauth2/token'
        const tokenResponse = await axios.post(tokenUrl, body)
        console.log('bearer token reponse:', tokenResponse.data)

        const options = {
            headers: {
                Authorization: `Bearer ${tokenResponse.data.access_token}`
            }
        }

        const dataResponse = await axios.get('https://api.petfinder.com/v2/animals?type=dog&page=2', options)

        console.log('data response:', dataResponse.data)
    } catch (err) {
        console.log(err)
    }
}

fetchPets()